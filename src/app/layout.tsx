import type { Metadata } from "next";
import { Roboto as FontSans } from "next/font/google";
import { cn } from "@/lib/utils";
import "./globals.css";
import Header from "@/components/common/header";

<<<<<<< HEAD
// const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={inter.className}>{children}</body>
//     </html>
//   );
// }
// import { FC, ReactNode } from 'react';

// interface AuthLayoutProps {
//   children: ReactNode;
// }

// const AuthLayout: FC<AuthLayoutProps> = ({ children }) => {
//   return <div className='bg-slate-200 p-10 rounded-md'>{children}</div>;
// };

// export default AuthLayout;

// import Navbar from '@/components/Navbar';
import '@/styles/globals.css';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';

const inter = Inter({ subsets: ['latin'] });
=======
const fontSans = FontSans({ 
  subsets: ["vietnamese"],
  weight: ["100", "300", "400", "500", "700", "900"],
 });
>>>>>>> f700ac6e26bfe00d32c1e8b347e271254a12ff91

export const metadata: Metadata = {
  title: "PickFood",
  description: "PickFood: Your personalized dining companion.",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
<<<<<<< HEAD
    <html lang='en'>
      <body className={inter.className}>
        <main className='h-screen flex flex-col justify-center items-center'>
          {/* <Navbar /> */}
          {children}
        </main>
      </body>
=======
    <html lang="en">
      <body className={cn(
        "relative flex flex-col min-h-screen max-h-screen justify-start items-center py-auto",
        fontSans.className
      )}>
        <Header />
        {children}
        </body>
>>>>>>> f700ac6e26bfe00d32c1e8b347e271254a12ff91
    </html>
  );
}

